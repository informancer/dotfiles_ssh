#!/usr/bin/env bash
# -*- sh -*-

usage() { echo "Usage: $(basename $0) [-p passphrase] [-k <keyfile>] [--overwrite-config] <user> <hostname>" 1>&2; }

OPTS=`getopt -o k:p: --long overwrite-config,keyfile: -n $(basename $0) -- "$@"`

if [ $? != 0 ] ; then echo "Failed parsing options." >&2 ; exit 1 ; fi

eval set -- "$OPTS"

overwrite_config=false

while true; do
    case "$1" in
	"-k"|"--keyfile") keyfile="$2"; shift; shift;;
	"--overwrite-config") overwrite_config=true; shift ;;
	"-p") passphrase="$2"; shift; shift;;
	-- ) shift; break ;;
	* ) break ;;
    esac
done

if [ $# -ne 2 ]; then
    usage;
    exit 64;
fi

user=$1
host=$2

confdir="$HOME/.ssh/config.d"
confname="${confdir}/${user}@${host}.config"

if [ "${overwrite_config}" = false ] && [ -f "${confname}" ]; then
    echo "File \"${confname}\" already exists"
    echo "Use --overwrite-config to force recreation of the configuration"
   exit 1
fi

if [ -z ${keyfile+x} ]; then
    keyfile="${user}@${host}"
fi

if [ ! -z ${passphrase+x} ]; then
    passphrase_opt="-N $passphrase"
fi

echo create a new key for $user@$host

echo ${confdir}
mkdir -p ${confdir}
chmod 700 "${confdir}"

ssh-keygen ${passphrase_opt} -f "$HOME/.ssh/${keyfile}"
echo $confname

touch "$confname"
chmod 600 "$confname"

cat <<EOF > $confname
Match User ${user} Host ${host}
  IdentityFile ~/.ssh/${keyfile}
EOF
